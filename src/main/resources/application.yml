logging:
  level.root: WARN
  level.no: ${LOG_LEVEL:DEBUG}
  level.org.springframework: WARN
  level.org.springframework.web: WARN
  level.org.apache.jena.riot: ERROR
server:
  port: 8080
application:
  datasetUri: ${FDK_DATASET_HARVESTER_URI:https://datasets.staging.fellesdatakatalog.digdir.no}/datasets
  catalogUri: ${FDK_DATASET_HARVESTER_URI:https://datasets.staging.fellesdatakatalog.digdir.no}/catalogs
  harvestAdminRootUrl: ${HARVEST_ADMIN_ROOT_URL:http://fdk-harvest-admin:8080/api}
spring:
  security.oauth2.resourceserver.jwt:
    jwk-set-uri: ${SSO_HOST:https://sso.staging.fellesdatakatalog.digdir.no}/auth/realms/fdk/protocol/openid-connect/certs
    issuer-uri: ${SSO_HOST:https://sso.staging.fellesdatakatalog.digdir.no}/auth/realms/fdk
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
  data.mongodb.uri: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/datasetHarvester?authSource=admin&authMechanism=SCRAM-SHA-1

---
spring:
  config.activate.on-profile: develop
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
  data.mongodb.uri: mongodb://admin:admin@localhost:27017/datasetHarvester?authSource=admin&authMechanism=SCRAM-SHA-1
application:
  harvestAdminRootUrl: https://admin-api.staging.fellesdatakatalog.digdir.no/api

---
spring:
  config.activate.on-profile: contract-test
  security.oauth2.resourceserver.jwt:
    jwk-set-uri: http://localhost:5000/auth/realms/fdk/protocol/openid-connect/certs
    issuer-uri: http://localhost:5000/auth/realms/fdk
  rabbitmq:
    host: localhost
    port: 5000
    username: admin
    password: admin
application:
  harvestAdminRootUrl: http://localhost:5000/api
  datasetUri: http://localhost:5000/datasets
  catalogUri: http://localhost:5000/catalogs